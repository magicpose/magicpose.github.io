<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[H2 数据库安装]]></title>
      <url>/2017/11/22/h2/install%20h2/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p><a href="http://www.h2database.com" target="_blank" rel="external">H2官方站点</a><br><a id="more"></a></p>
<h3 id="安装JAVA环境-设置JAVA-HOME-CLASSPATH"><a href="#安装JAVA环境-设置JAVA-HOME-CLASSPATH" class="headerlink" title="安装JAVA环境,设置JAVA_HOME,CLASSPATH"></a>安装JAVA环境,设置JAVA_HOME,CLASSPATH</h3><p>下载安装不多说<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># linux下设置java环境变量</span></div><div class="line">vim /etc/profile</div><div class="line"></div><div class="line"><span class="built_in">export</span> JAVA_HOME=/opt/java/jdk1.8.0_151</div><div class="line"><span class="built_in">export</span> JAVA_BIN=<span class="variable">$JAVA_HOME</span>/bin</div><div class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$JAVA_HOME</span>/lib/dt.jar:<span class="variable">$JAVA_HOME</span>/lib/tools.jar</div><div class="line"><span class="built_in">export</span> PATH=<span class="variable">$JAVA_HOME</span>/bin:<span class="variable">$PATH</span></div><div class="line"></div><div class="line"><span class="comment"># 使设置生效</span></div><div class="line"><span class="built_in">source</span> /etc/profile</div></pre></td></tr></table></figure></p>
<h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>下载H2压缩包,解压,进入目录,<code>build.bat</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd bin</div><div class="line"># 运行 h2.bat</div><div class="line">h2.bat</div></pre></td></tr></table></figure></p>
<h3 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h3><p>下载H2压缩包,解压,进入目录,<code>./build.sh</code><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">cd bin</div><div class="line"># 运行 h2.sh &amp;</div><div class="line">./h2.sh &amp;</div></pre></td></tr></table></figure></p>
<h3 id="启动配置-h2-server-properties"><a href="#启动配置-h2-server-properties" class="headerlink" title="启动配置 .h2.server.properties"></a>启动配置 <code>.h2.server.properties</code></h3><p>默认启动只允许本机访问,需要设置一个属性<code>webAllowOthers=true</code>.这个在windows下面启动之后有个配置页面可以进行配置<br><img src="http://blog.magicpose.com/img/h2/h2-01.png" alt="H2管理登录界面"><br><figure class="image-box">
                <img src="http://blog.magicpose.com/img/h2/h2-02.png" alt="H2管理自定义设置界面" title="" class="">
                <p>H2管理自定义设置界面</p>
            </figure></p>
<p>Linux下因为没有安装GUI,所以很恶心,启动后无法访问,访问提示<code>&quot;Sorry, remote connections (&#39;webAllowOthers&#39;) are disabled on this server&quot;</code></p>
<p><strong>那么注意重点,方法来了:</strong><br>在<code>Windows</code>下配置后,会生成一个属性文件<code>.h2.server.properties</code>,文件位置在<code>&quot;C:\Users\用户目录&quot;</code>,打开该文件可以看到<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">#H2 Server Properties</div><div class="line">#Sat Nov 11 17:40:03 CST 2017</div><div class="line">0=Generic JNDI Data Source|javax.naming.InitialContext|java\:comp/env/jdbc/Test|sa</div><div class="line">1=Generic Firebird Server|org.firebirdsql.jdbc.FBDriver|jdbc\:firebirdsql\:localhost\:/temp/firebird/test|sysdba</div><div class="line">10=Generic Derby (Server)|org.apache.derby.jdbc.ClientDriver|jdbc\:derby\://localhost\:1527/test;create\=true|sa</div><div class="line">11=Generic Derby (Embedded)|org.apache.derby.jdbc.EmbeddedDriver|jdbc\:derby\:test;create\=true|sa</div><div class="line">12=Generic H2 (Server)|org.h2.Driver|jdbc\:h2\:tcp\://localhost/~/test|sa</div><div class="line"># 注意此处默认有一个test数据库,数据库位置&quot;d:/opt/h2/data/test&quot;,用户名是test. 如果要移植到Linux下的时候将此处目录修改为在Linux上对应目录即可</div><div class="line">13=Generic H2 (Embedded)|org.h2.Driver|jdbc\:h2\:d\:/opt/h2/data/test|test</div><div class="line">2=Generic SQLite|org.sqlite.JDBC|jdbc\:sqlite\:test|sa</div><div class="line">3=Generic DB2|com.ibm.db2.jcc.DB2Driver|jdbc\:db2\://localhost/test|</div><div class="line">4=Generic Oracle|oracle.jdbc.driver.OracleDriver|jdbc\:oracle\:thin\:@localhost\:1521\:XE|sa</div><div class="line">5=Generic MS SQL Server 2000|com.microsoft.jdbc.sqlserver.SQLServerDriver|jdbc\:microsoft\:sqlserver\://localhost\:1433;DatabaseName\=sqlexpress|sa</div><div class="line">6=Generic MS SQL Server 2005|com.microsoft.sqlserver.jdbc.SQLServerDriver|jdbc\:sqlserver\://localhost;DatabaseName\=test|sa</div><div class="line">7=Generic PostgreSQL|org.postgresql.Driver|jdbc\:postgresql\:test|</div><div class="line">8=Generic MySQL|com.mysql.jdbc.Driver|jdbc\:mysql\://localhost\:3306/test|</div><div class="line">9=Generic HSQLDB|org.hsqldb.jdbcDriver|jdbc\:hsqldb\:test;hsqldb.default_table_type\=cached|sa</div><div class="line"># 允许远程访问</div><div class="line">webAllowOthers=true</div><div class="line"># 访问端口</div><div class="line">webPort=80</div><div class="line">webSSL=false</div></pre></td></tr></table></figure></p>
<p>将<code>.h2.server.properties</code>文件移植到Linux系统下,如果是<code>root</code>,则放在<code>/root</code>目录下即可,其他用户放到<code>/home/用户目录</code>下(没测试过)<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">#H2 Server Properties</div><div class="line">#Sat Nov 11 17:58:34 CST 2017</div><div class="line">0=Generic JNDI Data Source|javax.naming.InitialContext|java\:comp/env/jdbc/Test|sa</div><div class="line">1=Generic Firebird Server|org.firebirdsql.jdbc.FBDriver|jdbc\:firebirdsql\:localhost\:/temp/firebird/test|sysdba</div><div class="line">10=Generic Derby (Server)|org.apache.derby.jdbc.ClientDriver|jdbc\:derby\://localhost\:1527/test;create\=true|sa</div><div class="line">11=Generic Derby (Embedded)|org.apache.derby.jdbc.EmbeddedDriver|jdbc\:derby\:test;create\=true|sa</div><div class="line">12=Generic H2 (Server)|org.h2.Driver|jdbc\:h2\:tcp\://localhost/~/test|sa</div><div class="line">13=Generic H2 (Embedded)|org.h2.Driver|jdbc\:h2\:/opt/h2/data/xxx|xxx</div><div class="line">2=Generic SQLite|org.sqlite.JDBC|jdbc\:sqlite\:test|sa</div><div class="line">3=Generic DB2|com.ibm.db2.jcc.DB2Driver|jdbc\:db2\://localhost/test|</div><div class="line">4=Generic Oracle|oracle.jdbc.driver.OracleDriver|jdbc\:oracle\:thin\:@localhost\:1521\:XE|sa</div><div class="line">5=Generic MS SQL Server 2000|com.microsoft.jdbc.sqlserver.SQLServerDriver|jdbc\:microsoft\:sqlserver\://localhost\:1433;DatabaseName\=sqlexpress|sa</div><div class="line">6=Generic MS SQL Server 2005|com.microsoft.sqlserver.jdbc.SQLServerDriver|jdbc\:sqlserver\://localhost;DatabaseName\=test|sa</div><div class="line">7=Generic PostgreSQL|org.postgresql.Driver|jdbc\:postgresql\:test|</div><div class="line">8=Generic MySQL|com.mysql.jdbc.Driver|jdbc\:mysql\://localhost\:3306/test|</div><div class="line">9=Generic HSQLDB|org.hsqldb.jdbcDriver|jdbc\:hsqldb\:test;hsqldb.default_table_type\=cached|sa</div><div class="line">webAllowOthers=true</div><div class="line">webPort=80</div><div class="line">webSSL=false</div></pre></td></tr></table></figure></p>
]]></content>
      
        
        <tags>
            
            <tag> h2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java jstack 用法]]></title>
      <url>/2017/11/16/jvm/reprint_jstack/</url>
      <content type="html"><![CDATA[<h2 id="导出JVM堆信息的方法"><a href="#导出JVM堆信息的方法" class="headerlink" title="导出JVM堆信息的方法"></a>导出JVM堆信息的方法</h2><p><a href="http://fastthread.io/" target="_blank" rel="external">http://fastthread.io/</a><br><a id="more"></a> </p>
<h3 id="jstack"><a href="#jstack" class="headerlink" title="jstack"></a>jstack</h3><blockquote>
<p>‘jstack’ is an effective command line tool to capture thread dumps. jstack tool is shipped in JDK_HOMEbin folder. Here is the command that you need to issue to capture thread dump:</p>
<p><code>jstack -l  &lt;pid&gt; &gt; &lt;file-path&gt;</code>  </p>
<p>where<br>pid: is the Process Id of the application, whose thread dump should be captured</p>
<p>file-path: is the file path where thread dump will be written in to.<br>Example:</p>
<p><code>jstack -l 37320 &gt; /opt/tmp/threadDump.txt</code>   </p>
<p>As per the example thread dump of the process would be generated in /opt/tmp/threadDump.txt file.</p>
<p>Jstack tool is included in JDK since Java 5. If you are running in older version of java, consider using other options</p>
</blockquote>
<h3 id="jcmd"><a href="#jcmd" class="headerlink" title="jcmd"></a>jcmd</h3><blockquote>
<p>The jcmd tool was introduced with Oracle’s Java 7. It’s useful in troubleshooting issues with JVM applications. It has various capabilities such as identifying java process Ids, acquiring heap dumps, acquiring thread dumps, acquiring garbage collection statistics, ….</p>
<p>Using the below JCMD command you can generate thread dump:</p>
<p><code>jcmd &lt;pid&gt; Thread.print &gt; &lt;file-path&gt;</code><br>where<br>pid: is the Process Id of the application, whose thread dump should be captured<br>file-path: is the file path where thread dump will be written in to.</p>
<p>Example:<br><code>jcmd 37320 Thread.print &gt; /opt/tmp/threadDump.txt</code><br>As per the example thread dump of the process would be generated in /opt/tmp/threadDump.txt file.</p>
</blockquote>
<h2 id="实际使用分析"><a href="#实际使用分析" class="headerlink" title="实际使用分析"></a>实际使用分析</h2><p><a href="https://www.pocketdigi.com/20170523/1574.html" target="_blank" rel="external">应用开发笔记</a></p>
<p>jstack是jdk中自带的用于查看进程内线程栈的工具。当程序出现死锁时，我们可以通过jstack打印线程栈找到问题。</p>
<h3 id="找出代码中的死锁"><a href="#找出代码中的死锁" class="headerlink" title="找出代码中的死锁"></a>找出代码中的死锁</h3><p>学习从一段简单的代码开始:<br><!-- more --><br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Main</span> </span>&#123;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">        test1();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">test1</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">final</span> Object lock1 = <span class="keyword">new</span> Object();</div><div class="line">        <span class="keyword">final</span> Object lock2 = <span class="keyword">new</span> Object();</div><div class="line">        Thread thread=<span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable() &#123;</div><div class="line">            <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                <span class="keyword">synchronized</span> (lock1) &#123;</div><div class="line">                    <span class="keyword">try</span> &#123;</div><div class="line">                        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++) &#123;</div><div class="line">                            Thread.sleep(<span class="number">1000</span>);</div><div class="line">                            System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+i);</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">synchronized</span> (lock2) &#123;</div><div class="line">                            <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&lt;<span class="number">40</span>;i++) &#123;</div><div class="line">                                Thread.sleep(<span class="number">1000</span>);</div><div class="line">                                System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+i);</div><div class="line">                            &#125;</div><div class="line">                        &#125;</div><div class="line">                    &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                        e.printStackTrace();</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;);</div><div class="line">        thread.start();</div><div class="line">        <span class="keyword">synchronized</span> (lock2) &#123;</div><div class="line">            <span class="keyword">try</span> &#123;</div><div class="line">                <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">20</span>;i++) &#123;</div><div class="line">                    Thread.sleep(<span class="number">1000</span>);</div><div class="line">                    System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+i);</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">synchronized</span> (lock1) &#123;</div><div class="line">                    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">20</span>;i&lt;<span class="number">40</span>;i++) &#123;</div><div class="line">                        Thread.sleep(<span class="number">1000</span>);</div><div class="line">                        System.out.println(Thread.currentThread().getName()+<span class="string">" "</span>+i);</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line"></div><div class="line">            &#125; <span class="keyword">catch</span> (InterruptedException e) &#123;</div><div class="line">                e.printStackTrace();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>肉眼都能看出来的死锁，程序运行20s后进入死锁状态。<br>首先我们先找出这个程序的进程id,建议用jps,而不是ps,原因是jps只会显示当前用户下面的java进程，等于自动帮我们过滤了。<br><figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">jps -l</div><div class="line"></div><div class="line">$ jps</div><div class="line">8896 Bootstrap</div><div class="line">3941 Bootstrap</div><div class="line">11718 Jps</div><div class="line">9711 Bootstrap</div></pre></td></tr></table></figure></p>
<p>jstack 显示堆栈信息<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line">$ jstack <span class="number">9711</span></div><div class="line"></div><div class="line"><span class="number">2017</span>-<span class="number">05</span>-<span class="number">23</span> <span class="number">13</span>:<span class="number">57</span>:<span class="number">22</span></div><div class="line"><span class="function">Full thread dump Java <span class="title">HotSpot</span><span class="params">(TM)</span> 64-Bit Server <span class="title">VM</span> <span class="params">(<span class="number">25.45</span>-b02 mixed mode)</span>:</span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function">"Attach Listener" #12 daemon prio</span>=<span class="number">9</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f780c800</span> nid=<span class="number">0x4507</span> waiting on condition [<span class="number">0x0000000000000000</span>]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"Thread-0" #11 prio=5 os_prio=31 tid=0x00007ff0f80c0000 nid=0x5a03 waiting for monitor entry [0x0000700002310000]</div><div class="line">   java.lang.Thread.State: BLOCKED (on object monitor)</div><div class="line">    at Main$<span class="number">1</span>.run(Main.java:<span class="number">33</span>)</div><div class="line">    - waiting to lock &lt;<span class="number">0x000000076adb1a98</span>&gt; (a java.lang.Object)</div><div class="line">    - locked &lt;<span class="number">0x000000076adb1a88</span>&gt; (a java.lang.Object)</div><div class="line">    at java.lang.Thread.run(Thread.java:<span class="number">745</span>)</div><div class="line"></div><div class="line">"Service Thread" #10 daemon prio=9 os_prio=31 tid=0x00007ff0f980b800 nid=0x5603 runnable [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"C1 CompilerThread3" #9 daemon prio=9 os_prio=31 tid=0x00007ff0f6803000 nid=0x5403 waiting on condition [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"C2 CompilerThread2" #8 daemon prio=9 os_prio=31 tid=0x00007ff0f6802800 nid=0x5203 waiting on condition [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"C2 CompilerThread1" #7 daemon prio=9 os_prio=31 tid=0x00007ff0f6801800 nid=0x5003 waiting on condition [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"C2 CompilerThread0" #6 daemon prio=9 os_prio=31 tid=0x00007ff0f90de800 nid=0x4e03 waiting on condition [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"Monitor Ctrl-Break" #5 daemon prio=5 os_prio=31 tid=0x00007ff0f90dc800 nid=0x4c03 runnable [0x0000700001bfb000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line">    at java.net.SocketInputStream.socketRead0(Native Method)</div><div class="line">    at java.net.SocketInputStream.socketRead(SocketInputStream.java:<span class="number">116</span>)</div><div class="line">    at java.net.SocketInputStream.read(SocketInputStream.java:<span class="number">170</span>)</div><div class="line">    at java.net.SocketInputStream.read(SocketInputStream.java:<span class="number">141</span>)</div><div class="line">    at sun.nio.cs.StreamDecoder.readBytes(StreamDecoder.java:<span class="number">284</span>)</div><div class="line">    at sun.nio.cs.StreamDecoder.implRead(StreamDecoder.java:<span class="number">326</span>)</div><div class="line">    at sun.nio.cs.StreamDecoder.read(StreamDecoder.java:<span class="number">178</span>)</div><div class="line">    - locked &lt;<span class="number">0x000000076af12b68</span>&gt; (a java.io.InputStreamReader)</div><div class="line">    at java.io.InputStreamReader.read(InputStreamReader.java:<span class="number">184</span>)</div><div class="line">    at java.io.BufferedReader.fill(BufferedReader.java:<span class="number">161</span>)</div><div class="line">    at java.io.BufferedReader.readLine(BufferedReader.java:<span class="number">324</span>)</div><div class="line">    - locked &lt;<span class="number">0x000000076af12b68</span>&gt; (a java.io.InputStreamReader)</div><div class="line">    at java.io.BufferedReader.readLine(BufferedReader.java:<span class="number">389</span>)</div><div class="line">    at com.intellij.rt.execution.application.AppMainV2$<span class="number">1</span>.run(AppMainV2.java:<span class="number">64</span>)</div><div class="line"></div><div class="line">"Signal Dispatcher" #4 daemon prio=9 os_prio=31 tid=0x00007ff0f8039800 nid=0x4a03 runnable [0x0000000000000000]</div><div class="line">   java.lang.Thread.State: RUNNABLE</div><div class="line"></div><div class="line">"Finalizer" #3 daemon prio=8 os_prio=31 tid=0x00007ff0f9803000 nid=0x3903 in Object.wait() [0x0000700001972000]</div><div class="line">   java.lang.Thread.State: WAITING (on object monitor)</div><div class="line">    at java.lang.Object.wait(Native Method)</div><div class="line">    - waiting on &lt;<span class="number">0x000000076ab06f58</span>&gt; (a java.lang.ref.ReferenceQueue$Lock)</div><div class="line">    at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:<span class="number">143</span>)</div><div class="line">    - locked &lt;<span class="number">0x000000076ab06f58</span>&gt; (a java.lang.ref.ReferenceQueue$Lock)</div><div class="line">    at java.lang.ref.ReferenceQueue.remove(ReferenceQueue.java:<span class="number">164</span>)</div><div class="line">    at java.lang.ref.Finalizer$FinalizerThread.run(Finalizer.java:<span class="number">209</span>)</div><div class="line"></div><div class="line">"Reference Handler" #2 daemon prio=10 os_prio=31 tid=0x00007ff0f9802000 nid=0x3703 in Object.wait() [0x000070000186f000]</div><div class="line">   java.lang.Thread.State: WAITING (on object monitor)</div><div class="line">    at java.lang.Object.wait(Native Method)</div><div class="line">    - waiting on &lt;<span class="number">0x000000076ab06998</span>&gt; (a java.lang.ref.Reference$Lock)</div><div class="line">    at java.lang.Object.wait(Object.java:<span class="number">502</span>)</div><div class="line">    at java.lang.ref.Reference$ReferenceHandler.run(Reference.java:<span class="number">157</span>)</div><div class="line">    - locked &lt;<span class="number">0x000000076ab06998</span>&gt; (a java.lang.ref.Reference$Lock)</div><div class="line"></div><div class="line">"main" #1 prio=5 os_prio=31 tid=0x00007ff0f8002000 nid=0x1c03 waiting for monitor entry [0x0000700000e51000]</div><div class="line">   java.lang.Thread.State: BLOCKED (on object monitor)</div><div class="line">    at Main.test1(Main.java:<span class="number">52</span>)</div><div class="line">    - waiting to lock &lt;<span class="number">0x000000076adb1a88</span>&gt; (a java.lang.Object)</div><div class="line">    - locked &lt;<span class="number">0x000000076adb1a98</span>&gt; (a java.lang.Object)</div><div class="line">    at Main.main(Main.java:<span class="number">18</span>)</div><div class="line"></div><div class="line"><span class="string">"VM Thread"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f801f800</span> nid=<span class="number">0x3503</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#0 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f9003800</span> nid=<span class="number">0x2503</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#1 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f9004000</span> nid=<span class="number">0x2703</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#2 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f7801000</span> nid=<span class="number">0x2903</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#3 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f600e800</span> nid=<span class="number">0x2b03</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#4 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f600f000</span> nid=<span class="number">0x2d03</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#5 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f6010000</span> nid=<span class="number">0x2f03</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#6 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f6010800</span> nid=<span class="number">0x3103</span> runnable</div><div class="line"></div><div class="line"><span class="string">"GC task thread#7 (ParallelGC)"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f6011000</span> nid=<span class="number">0x3303</span> runnable</div><div class="line"></div><div class="line"><span class="string">"VM Periodic Task Thread"</span> os_prio=<span class="number">31</span> tid=<span class="number">0x00007ff0f980c000</span> nid=<span class="number">0x5803</span> waiting on condition</div><div class="line"></div><div class="line">JNI global references: <span class="number">26</span></div><div class="line"></div><div class="line"></div><div class="line">Found one Java-level deadlock:</div><div class="line">=============================</div><div class="line"><span class="string">"Thread-0"</span>:</div><div class="line">  waiting to lock monitor <span class="number">0x00007ff0f8024f38</span> (object <span class="number">0x000000076adb1a98</span>, a java.lang.Object),</div><div class="line">  which is held by <span class="string">"main"</span></div><div class="line"><span class="string">"main"</span>:</div><div class="line">  waiting to lock monitor <span class="number">0x00007ff0f8023bf8</span> (object <span class="number">0x000000076adb1a88</span>, a java.lang.Object),</div><div class="line">  which is held by <span class="string">"Thread-0"</span></div><div class="line"></div><div class="line">Java stack information <span class="keyword">for</span> the threads listed above:</div><div class="line">===================================================</div><div class="line"><span class="string">"Thread-0"</span>:</div><div class="line">    at Main$<span class="number">1</span>.run(Main.java:<span class="number">33</span>)</div><div class="line">    - waiting to lock &lt;<span class="number">0x000000076adb1a98</span>&gt; (a java.lang.Object)</div><div class="line">    - locked &lt;<span class="number">0x000000076adb1a88</span>&gt; (a java.lang.Object)</div><div class="line">    at java.lang.Thread.run(Thread.java:<span class="number">745</span>)</div><div class="line"><span class="string">"main"</span>:</div><div class="line">    at Main.test1(Main.java:<span class="number">52</span>)</div><div class="line">    - waiting to lock &lt;<span class="number">0x000000076adb1a88</span>&gt; (a java.lang.Object)</div><div class="line">    - locked &lt;<span class="number">0x000000076adb1a98</span>&gt; (a java.lang.Object)</div><div class="line">    at Main.main(Main.java:<span class="number">18</span>)</div><div class="line"></div><div class="line">Found <span class="number">1</span> deadlock.</div></pre></td></tr></table></figure></p>
<p>jstack直接帮我们找出来了deadlock。真实场景下，如果代码比较复杂，可能需要我们自己分析找出死锁。<br>如果我们自己分析，该怎么找出死锁呢？重点分析java.lang.Thread.State: BLOCKED的进程，找到<br>waiting to lock，看看这个锁的持有者，是不是也被锁着，沿着这个链路找下去，是不是死锁就能找出来 了。比如上面的例子中,main线程持有0x000000076adb1a98锁，等待0x000000076adb1a88锁释放，而Thread-0持有0x000000076adb1a88锁，等待0x000000076adb1a98锁释放，两个线程互相等待，而进入死锁状态。</p>
<h3 id="找出CPU消耗多的代码"><a href="#找出CPU消耗多的代码" class="headerlink" title="找出CPU消耗多的代码"></a>找出CPU消耗多的代码</h3><p>如果程序cpu占用很高，我们需要找到问题优化，可以配合top命令，找出最耗cpu的进程，从而找到相应代码解决问题。</p>
<ul>
<li><p>先用jps找出程序pid，这里是23034</p>
</li>
<li><p>用top命令找出该进程最耗cpu的线程。下面的top是linux中的，mac里的不一样。</p>
<blockquote>
<p><code>top -Hp 9711</code></p>
<figure class="image-box">
                <img src="http://blog.magicpose.com/img/jstack-01.png" alt="top -Hp <pid>" title="" class="">
                <p>top -Hp <pid></pid></p>
            </figure>
</blockquote>
</li>
<li><p>查看占用CPU较高的PID,并将其转化为16进制<br>因为top里的pid是10进制，而jstack里是16进制，叫nid。<br>可以用printf命令转换</p>
<blockquote>
<p><code>printf &quot;%x\n&quot; &lt;pid&gt;</code> 得到16进制PID</p>
</blockquote>
</li>
<li><p>jstack出场</p>
<blockquote>
<p><code>jstack 23034 | grep 16进制PID</code> 查看并分析结果找出问题</p>
</blockquote>
</li>
</ul>
]]></content>
      
        
        <tags>
            
            <tag> JVM </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[专业名词解释 1]]></title>
      <url>/2017/11/13/english/directory/</url>
      <content type="html"><![CDATA[<h2 id="网站访问量"><a href="#网站访问量" class="headerlink" title="网站访问量"></a>网站访问量</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"># 日活跃用户</div><div class="line">DAU: Daily Active User</div><div class="line"># 日活跃用户  </div><div class="line">UV: Unique Visitor</div></pre></td></tr></table></figure>
<h2 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h2><h3 id="字符集排序规则命名"><a href="#字符集排序规则命名" class="headerlink" title="字符集排序规则命名"></a>字符集排序规则命名</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"># _ci结尾表示忽略大小写</div><div class="line">ci : case insensitive [ɪn&apos;sensətɪv]</div><div class="line"># _cs结尾表示不忽略大小写</div><div class="line">cs : case sensitive [&apos;sensətɪv]</div><div class="line"># _bin表示二进制比较</div><div class="line">bin : binary[&apos;baɪnəri]</div><div class="line"></div><div class="line"></div><div class="line">SHOW COLLATION LIKE &apos;gbk%&apos;;</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> English </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[H2 数据库常用基本命令]]></title>
      <url>/2017/11/11/h2/h2%20command/</url>
      <content type="html"><![CDATA[<h2 id="SQL语法说明及设置自动完成"><a href="#SQL语法说明及设置自动完成" class="headerlink" title="SQL语法说明及设置自动完成"></a>SQL语法说明及设置自动完成</h2><p>基本和My算起来语法相同,如果有问题,可以开启自动提示</p>
<a id="more"></a>
<figure class="image-box">
                <img src="http://blog.magicpose.com/img/h2/h2-03.png" alt="H2管理自定义设置界面" title="" class="">
                <p>H2管理自定义设置界面</p>
            </figure>
<h2 id="常用基本命令"><a href="#常用基本命令" class="headerlink" title="常用基本命令"></a>常用基本命令</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">DROP</span> <span class="keyword">table</span> <span class="keyword">if</span> <span class="keyword">exists</span> MINE;  </div><div class="line"></div><div class="line">## 创建表</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> mine (  </div><div class="line"> <span class="keyword">id</span> <span class="built_in">int</span> PRIMARY <span class="keyword">KEY</span> AUTO_INCREMENT ,  </div><div class="line"> <span class="keyword">desc</span> <span class="built_in">varchar</span>(<span class="number">32</span>) ,  </div><div class="line"> vala <span class="built_in">varchar</span>(<span class="number">32</span>) ,  </div><div class="line"> valb <span class="built_in">varchar</span>(<span class="number">32</span>)  ,  </div><div class="line"> valc <span class="built_in">varchar</span>(<span class="number">32</span>)  ,  </div><div class="line"> vald <span class="built_in">varchar</span>(<span class="number">32</span>)  ,  </div><div class="line"> vale <span class="built_in">varchar</span>(<span class="number">32</span>)  </div><div class="line">); </div><div class="line"></div><div class="line">## 添加字段</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> MINE <span class="keyword">add</span>  userName <span class="built_in">varchar</span>(<span class="number">20</span>) <span class="keyword">AFTER</span> <span class="keyword">id</span>;</div><div class="line"></div><div class="line">## 删除字段</div><div class="line"><span class="keyword">alter</span> <span class="keyword">table</span> mine <span class="keyword">drop</span> <span class="keyword">COLUMN</span> answer;</div><div class="line"></div><div class="line"># 设置列默认值</div><div class="line"><span class="keyword">ALTER</span> <span class="keyword">TABLE</span> MYCLOUD <span class="keyword">ALTER</span> <span class="keyword">COLUMN</span> <span class="keyword">ID</span> <span class="keyword">set</span> <span class="keyword">not</span> <span class="literal">null</span> ;</div><div class="line"></div><div class="line"># 设置主键</div><div class="line"><span class="keyword">CREATE</span> PRIMARY <span class="keyword">KEY</span> <span class="string">"PRIMARY_KEY_MYCLOUD_ID "</span><span class="keyword">ON</span> MYCLOUD ( <span class="keyword">ID</span> ) ;</div></pre></td></tr></table></figure>
<p>注意使用 <code>create table a as select * from b</code> 创建的表,可能没有主键,无法编辑数据,需要设置主键</p>
]]></content>
      
        
        <tags>
            
            <tag> h2 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GitBook Read]]></title>
      <url>/2017/11/10/gitbook/directory/</url>
      <content type="html"><![CDATA[<p>## </p>
]]></content>
      
        
        <tags>
            
            <tag> GitBook </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[这一天天的吃食]]></title>
      <url>/2017/10/25/eat/menu/</url>
      <content type="html"><![CDATA[<h2 id="2017年10月25日"><a href="#2017年10月25日" class="headerlink" title="2017年10月25日"></a>2017年10月25日</h2><p><a href="http://www.haodou.com/recipe/63370/" target="_blank" rel="external">好豆-炖豆腐</a></p>
<p><a href="http://www.haodou.com/recipe/279668/" target="_blank" rel="external">好豆-宫保鸡</a></p>
<hr>
]]></content>
      
        
        <tags>
            
            <tag> eat </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[经济学理论]]></title>
      <url>/2017/10/25/life/economic/</url>
      <content type="html"><![CDATA[<h3 id="菜单成本"><a href="#菜单成本" class="headerlink" title="菜单成本"></a>菜单成本</h3><p>商家涨价的时候也得花钱.餐厅该价格要重印菜单,重做宣传,安抚抗议的消费者</p>
<a id="more"></a>
<h3 id="古诺均衡"><a href="#古诺均衡" class="headerlink" title="古诺均衡"></a>古诺均衡</h3><p>通俗来讲，一种产品市场只有两个卖家，卖的东西基本无差别，两个卖家相互之间也没有任何串通行为,不过都知道对方将生产多少、怎样定价，这样，双方都可以确定最优的产量来实现利润最大化。在这种均衡之下,低价格和微薄的利润，将大部分竞争对手阻挡在行业之外，而少数的巨头则依赖于规模生存下来，获得尚属可观的总量利润。</p>
<figure class="image-box">
                <img src="http://blog.magicpose.com/img/cournotequilibrium.jpg" alt="古诺均衡曲线" title="" class="">
                <p>古诺均衡曲线</p>
            </figure>
<p><a href="https://www.zhihu.com/question/28670668/answer/249332525" target="_blank" rel="external">知乎:为什么可口可乐涨价幅度不大？</a></p>
<h3 id="边际效应递减效应"><a href="#边际效应递减效应" class="headerlink" title="边际效应递减效应"></a>边际效应递减效应</h3><p>红利期到后期就会存在明显的边际效应递减的现象，开始投10万能赚回10万，红利后期就可能只能赚回3万，红利结束还有可能亏两万。</p>
<blockquote>
<p>国内一家知名的游戏公司出海的时候在海外某平台投了50万，APP激活成本极低，效果奇好，CEO大喜过望，果断在该平台充值入600多万，三个月之后，激活成本猛增，增到了难以承受的程度，而该广告平台的一个规则是充值不退，最终这厂只得将剩下的几百万在国内招商给其他出海APP</p>
</blockquote>
<p><a href="http://www.pmcaff.com/article?id=1049018523529344" target="_blank" rel="external">PMCAFF:在不可描述的网站上打广告是一种神马体验？</a></p>
<hr>
]]></content>
      
        <categories>
            
            <category> 经济 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> economic </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[MYSQL按时间统计]]></title>
      <url>/2017/10/01/mysql_datetime_count/</url>
      <content type="html"><![CDATA[<p>以下例子是按照小时和按照日期统计,其他的姿势可以自行切换</p>
<a id="more"></a>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"># 按小时统计</div><div class="line">SELECT  DATE_FORMAT(create_time, &apos;%Y-%m-%d %H&apos;) &apos;月份&apos;,COUNT(*) &apos;出库单数量&apos; FROM erp_warehouse_out</div><div class="line"> WHERE DATE_FORMAT(create_time,&apos;%Y-%m-%d&apos;)=&apos;2017-10-01&apos; GROUP BY DATE_FORMAT(create_time, &apos;%Y-%m-%d %H&apos;);</div><div class="line"> </div><div class="line"># 按日期统计</div><div class="line">SELECT  DATE_FORMAT(create_time, &apos;%Y-%m-%d&apos;) &apos;月份&apos;,COUNT(*) &apos;出库单数量&apos; FROM erp_warehouse_in</div><div class="line"> WHERE create_time&gt;&apos;2017-10-01 01:00:00&apos; GROUP BY DATE_FORMAT(create_time, &apos;%Y-%m-%d&apos;);</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> MYSQL </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[redis-cli 查看redis性能信息]]></title>
      <url>/2017/09/26/redis-info/</url>
      <content type="html"><![CDATA[<h2 id="info"><a href="#info" class="headerlink" title="info"></a>info</h2><a id="more"></a>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">$ redis-cli -h 127.0.0.1 -p 4848 -a <span class="string">'pwd'</span> info </div><div class="line">	| grep -e <span class="string">"connected_clients"</span> -e <span class="string">"blocked_clients"</span> </div><div class="line">	-e <span class="string">"used_memory_human"</span> -e <span class="string">"used_memory_peak_human"</span> </div><div class="line">	-e <span class="string">"rejected_connections"</span> -e <span class="string">"evicted_keys"</span> </div><div class="line">	-e <span class="string">"instantaneous"</span></div><div class="line"></div><div class="line">connected_clients:203</div><div class="line">blocked_clients:0</div><div class="line">used_memory_human:1.45G</div><div class="line">used_memory_peak_human:1.89G</div><div class="line">instantaneous_ops_per_sec:2029</div><div class="line">instantaneous_input_kbps:1646.20</div><div class="line">instantaneous_output_kbps:2149.47</div><div class="line">rejected_connections:0</div><div class="line">evicted_keys:0</div></pre></td></tr></table></figure>]]></content>
      
        
        <tags>
            
            <tag> redis </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[GC overhead limit]]></title>
      <url>/2017/09/24/java_exception_gc_overhead/</url>
      <content type="html"><![CDATA[<h2 id="问题描述"><a href="#问题描述" class="headerlink" title="问题描述"></a>问题描述</h2><p>导出excel的时候报错. </p>
<a id="more"></a>
<h2 id="异常代码摘要"><a href="#异常代码摘要" class="headerlink" title="异常代码摘要"></a>异常代码摘要</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line">org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun </div><div class="line"> java.lang.OutOfMemoryError: GC overhead limit exceeded</div><div class="line">	at org.apache.xmlbeans.impl.store.Saver$SynthNamespaceSaver.&lt;init&gt;(Saver.java:863)</div><div class="line">	at org.apache.xmlbeans.impl.store.Saver.&lt;init&gt;(Saver.java:121)</div><div class="line">	at org.apache.xmlbeans.impl.store.Saver$TextSaver.&lt;init&gt;(Saver.java:896)</div><div class="line">	at org.apache.xmlbeans.impl.store.Cursor._xmlText(Cursor.java:546)</div><div class="line">	at org.apache.xmlbeans.impl.store.Cursor.xmlText(Cursor.java:2436)</div><div class="line">	at org.apache.xmlbeans.impl.values.XmlObjectBase.xmlText(XmlObjectBase.java:1455)</div><div class="line">	at org.apache.poi.xssf.model.SharedStringsTable.getKey(SharedStringsTable.java:130)</div><div class="line">	at org.apache.poi.xssf.model.SharedStringsTable.addEntry(SharedStringsTable.java:176)</div><div class="line">	at org.apache.poi.xssf.usermodel.XSSFCell.setCellValue(XSSFCell.java:345)</div><div class="line">	at org.apache.poi.xssf.usermodel.XSSFCell.setCellValue(XSSFCell.java:315)</div><div class="line">	at com.jfinal.ext.kit.excel.PoiExporter.processAsRecord(PoiExporter.java:199)</div><div class="line">	at com.jfinal.ext.kit.excel.PoiExporter.export(PoiExporter.java:135)</div><div class="line">	at com.jfinal.ext.render.excel.PoiRender.render(PoiRender.java:57)</div><div class="line">	at com.jfinal.core.ActionHandler.handle(ActionHandler.java:99)</div><div class="line">	at org.edaw.report.common.handler.SessionHandler.handle(SessionHandler.java:30)</div><div class="line">	at com.jfinal.core.JFinalFilter.doFilter(JFinalFilter.java:74)</div><div class="line">	at org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:240)</div><div class="line">	at org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:207)</div><div class="line">	at org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:212)</div><div class="line">	at org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:94)</div></pre></td></tr></table></figure>
<h2 id="原因和解决方案"><a href="#原因和解决方案" class="headerlink" title="原因和解决方案"></a>原因和解决方案</h2><p>jdk的一种预警,表示gc可能发生内存溢出.可修改<code>jdk</code>参数尝试修复</p>
<figure class="highlight sh"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="comment"># 修改 catalina.sh 启动参数</span></div><div class="line">JAVA_OPTS=<span class="string">"-server</span></div><div class="line"><span class="string">-Xms6144m</span></div><div class="line"><span class="string">-Xms6144m</span></div><div class="line"><span class="string">-XX:MaxPermSize=1024m -XX:MetaspaceSize=512m</span></div><div class="line"><span class="string">-XX:+UseG1GC</span></div><div class="line"><span class="string">-XX:ParallelGCThreads=6</span></div><div class="line"><span class="string">-XX:NewRatio=2 -XX:ConcGCThreads=4</span></div><div class="line"><span class="string">-XX:MaxGCPauseMillis=300</span></div><div class="line"><span class="string">-XX:InitiatingHeapOccupancyPercent=50 -XX:G1HeapRegionSize=4m -XX:+ExplicitGCInvokesConcurrent</span></div><div class="line"><span class="string">-XX:+PrintGCDetails -Xloggc:/mnt/wwwroot/server/tomcat/gclog/report_tomcat_gc.log"</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> JAVA </category>
            
        </categories>
        
        
    </entry>
    
    <entry>
      <title><![CDATA[first]]></title>
      <url>/2017/09/21/first/</url>
      <content type="html"><![CDATA[<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p>
</blockquote>]]></content>
      
        <categories>
            
            <category> 测试 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> edaw </tag>
            
            <tag> test </tag>
            
            <tag> uec </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[安装Hexo]]></title>
      <url>/2017/09/20/hexo/</url>
      <content type="html"><![CDATA[<h2 id="安装清单"><a href="#安装清单" class="headerlink" title="安装清单"></a>安装清单</h2><ul>
<li>安装 node.js</li>
<li>安装 git</li>
<li>安装 hexo</li>
</ul>
<a id="more"></a>
<h4 id="安装-Node-js"><a href="#安装-Node-js" class="headerlink" title="安装 Node.js"></a>安装 Node.js</h4><p><a href="http://nodejs.org/" target="_blank" rel="external">Node.js</a> 一路安装即可,没什么需要注意的<br><code>cmd</code>-<code>npm -v</code> 查看安装结果</p>
<h4 id="安装-git"><a href="#安装-git" class="headerlink" title="安装 git"></a>安装 git</h4><p>window下一般安装 <a href="https://git-for-windows.github.io/" target="_blank" rel="external">msysgit</a> 一路安装即可</p>
<h4 id="安装-Hexo"><a href="#安装-Hexo" class="headerlink" title="安装 Hexo"></a>安装 Hexo</h4><p>使用以下命令安装hexo到全局</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ npm install -g hexo</div></pre></td></tr></table></figure>
<p>然后输入命令hexo -v输入hexo的版本号即为安装成功</p>
<h2 id="发布部署"><a href="#发布部署" class="headerlink" title="发布部署"></a>发布部署</h2><h3 id="注意后面要生成公私钥完成部署"><a href="#注意后面要生成公私钥完成部署" class="headerlink" title="注意后面要生成公私钥完成部署"></a>注意后面要生成公私钥完成部署</h3><p>打开<code>git</code>命令行:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line">cd ~/.ssh</div><div class="line"># 依次输入保存目录,密码(可以一直为空,则默认保存在.ssh目录下,密码为空)</div><div class="line">$ ssh-keygen -t rsa -C &quot;your_email@your_email.com&quot;</div><div class="line"># 在命令行copy密钥内容到剪贴板</div><div class="line">$ clip &lt; ~/.ssh/id_rsa.pub</div><div class="line"></div><div class="line"># 打开github,设置密钥</div><div class="line">Setting &gt; SSH and GPG keys &gt; New SSH key &gt; 黏贴密钥信息</div><div class="line"></div><div class="line"># git 命令行测试</div><div class="line">$ ssh -T git@github.com</div><div class="line"># 输出如下信息表示配置成功</div><div class="line">The authenticity of host &apos;github.com (192.30.255.112)&apos; can&apos;t be established.</div><div class="line">RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.</div><div class="line">Are you sure you want to continue connecting (yes/no)? yes</div><div class="line">Warning: Permanently added &apos;github.com,192.30.255.112&apos; (RSA) to the list of known hosts.</div><div class="line">Hi magicpose! You&apos;ve successfully authenticated, but GitHub does not provide shell access.</div></pre></td></tr></table></figure></p>
<h3 id="别忘记CNAME文件"><a href="#别忘记CNAME文件" class="headerlink" title="别忘记CNAME文件"></a>别忘记<code>CNAME</code>文件</h3><p>如果使用的是自己的域名,比如<code>blog.magicpose.com</code>,一定要在<code>source</code>目录下创建<code>CNAME</code>文件且加入一行内容:<code>blog.magicpose.com</code></p>
<h2 id="常用命令介绍"><a href="#常用命令介绍" class="headerlink" title="常用命令介绍"></a>常用命令介绍</h2><h4 id="Hexo命令"><a href="#Hexo命令" class="headerlink" title="Hexo命令"></a>Hexo命令</h4><p><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="external">Hexo官方文档</a><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">$ hexo new(n)    //写文章</div><div class="line">$ hexo generate(g)    //把文章生成页面</div><div class="line">$ hexo server(s)    //启动本地服务调试</div><div class="line">$ hexo deploy(d)    //部署到github 可与hexo g合并为 hexo d -g</div></pre></td></tr></table></figure></p>
<p><a href="http://blog.csdn.net/scythe666/article/details/51956821" target="_blank" rel="external">参考资料 : hexo VS jekyll</a></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Publish Over SSH Plugin 配置说明]]></title>
      <url>/2017/09/20/Jenkins/</url>
      <content type="html"><![CDATA[<h2 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h2><p>该插件可配合在编译中或编译后将编译结果发送的远程主机,并执行脚本</p>
<a id="more"></a>
<h2 id="1-服务器配置"><a href="#1-服务器配置" class="headerlink" title="1, 服务器配置"></a>1, 服务器配置</h2><blockquote>
<p>jenkins/系统管理/系统配置/Publish over SSH<br>添加<code>SSH Server</code>,按照主机信息依次配置即可<br><strong>重点:</strong> 切记 <code>Remote Directory</code> 应该配置为所选登录用户可读写的目录</p>
</blockquote>
<h2 id="2-项目配置"><a href="#2-项目配置" class="headerlink" title="2, 项目配置"></a>2, 项目配置</h2><blockquote>
<p>打开项目配置 设置<code>Send files or execute commands over SSH</code>   </p>
</blockquote>
<p><code>Transfer Set</code>属性:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">Source files: target//*zip       #要传输的文件,从项目工作目录开始</div><div class="line">Remove prefix: target/           #去掉前缀目录,只传输文件</div><div class="line">Remote directory: develop/$&#123;JOB_NAME&#125;/build-$&#123;BUILD_NUMBER&#125;  #远程目录,特别注意此目录以上一步配置的&quot;SSH Server - Remote Directory&quot; 为根目录</div><div class="line">#可以使用jinkins内置属性,时间格式.具体看配置处的说明</div><div class="line">Exec command: /mnt/hard1/server/script/hello.sh 执行远程shell脚本路径</div></pre></td></tr></table></figure></p>
]]></content>
      
        
    </entry>
    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>/2017/09/20/hello-world/</url>
      <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
      
        
    </entry>
    
  
  
</search>
